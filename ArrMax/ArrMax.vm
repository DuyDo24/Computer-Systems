// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

// Put your code here.
// Function ArrMax.arrMax: returns the largest value in the array
function ArrMax.arrMax 2
// local 0 = i (index)
// local 1 = max (current max)

push constant 0
pop local 0      // i = 0

// Set pointer 1 to argument[0] so that THAT points to base of array
push argument 0
pop pointer 1

// max = that[0]
push that 0
pop local 1

label LOOP_START

// if i >= argument[1] goto END
push local 0
push argument 1
lt
not
if-goto LOOP_END

// pointer 1 = argument[0] + i
push argument 0
push local 0
add
pop pointer 1

// if that[0] > max: max = that[0]
push that 0
push local 1
gt
if-goto SET_MAX
goto CONTINUE

label SET_MAX
push that 0
pop local 1

label CONTINUE
// i = i + 1
push local 0
push constant 1
add
pop local 0

goto LOOP_START

label LOOP_END
// return max
push local 1
return
