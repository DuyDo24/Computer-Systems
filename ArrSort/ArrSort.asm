// Sorts the array of length R2 whose first element is at RAM[R1] in ascending order in place. Sets R0 to True (-1) when complete.
// (R0, R1, R2 refer to RAM[0], RAM[1], and RAM[2], respectively.)

// Put your code here.
@2
D=M
@10
M=D-1
(OUTER)
@10
D=M
@END
D;JEQ
@20
M=0
(INNER)
@20
D=M
@10
D=D-M
@NEXT
D;JGE
@1
D=M
@20
D=D+M
A=D
D=M
@30
M=D
@1
D=M
@20
D=D+M
@1
D=D+A
A=D
D=M
@40
M=D
@30
D=M
@40
D=D-M
@NOSWAP
D;JLE
@40
D=M
@1
A=M
@20
A=A+M
M=D
@30
D=M
@1
A=M
@20
A=A+M
@1
A=A+1
M=D
(NOSWAP)
@20
M=M+1
@INNER
0;JMP
(NEXT)
@10
M=M-1
@OUTER
0;JMP
(END)
@0
M=-1
@END
0;JMP